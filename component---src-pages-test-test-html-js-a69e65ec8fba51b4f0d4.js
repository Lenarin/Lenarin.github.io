(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{jPka:function(e,t,n){"use strict";n.r(t),function(e){var a=n("q1tI"),r=n("Zttt"),o=n("aAma"),s=n("zDcZ"),i=[{text:"Что такое React?",variants:["Реактивная библиотека рендера","Набор компонент для сайта","Рисовальщик для графиков"],answer:0},{text:"Что такое JSX?",variants:["Строковые шаблоны","Синтаксический сахар, расширение языка JavaScript для более удобной работы с React","Другое имя для HTML тегов"],answer:1},{text:"Как правильно вызвать событие по клику на элемент?",variants:["Использовать addEventListener","Перехватить event выше по дереву","Добавить обработчик события onClick"],answer:2},{text:"Как получить данные из текстового поля?",variants:["Вытащить из HTML тега из поля text","Обернуть в state поля value и onChange","Передать state в поле value"],answer:1},{text:"Что такое пропы?",variants:["Параметры, передающиеся на сервер с запросом","Состояние компоненты","Параметры, передающиеся как входные данные в компоненту"],answer:2},{text:"Какой хук позвояляет управлять состоянием копоненты?",variants:["useState","useEffect","UseMemo"],answer:0},{text:"Какой хук позволяет подписываться на ивенты жизненного цикла компоненты?",variants:["useState","useEffect","UseMemo"],answer:1},{text:"Какой хук позволяет управлять в каких случаях стоит перерисовывать компоненту",variants:["useState","useEffect","UseMemo"],answer:2},{text:"Что такое условный рендеринг?",variants:["Рендер одной или иной компоненты в зависимости от пропсов или состояния","Разные методы рендера браузера, в завилисости от параметров","Рендеринг условий"],answer:0},{text:"Для чего нужен key в элементах массива?",variants:["Без него просто не заработает","Для красоты","Чтобы подсказать React какая компонента какая при следующем ререндере"],answer:2},{text:"Что будет если ключи в масисве будет не уникальны?",variants:["Непределенное поведение","Приложение закроется с ошибкой","Все будет работать"],answer:0},{text:"Что такое подъем состояния?",variants:["Это увеличение значения в состоянии компоненты","Это техника, при которой состояние поднимается вверх по дереву для использования в соседних компонентых","Это другое название хука useState"],answer:1},{text:"Какие из указанных событий являтся событиями клавиатуры?",variants:["onKeyDown onKeyPress onKeyUp","onChange onInput onInvalid onReset onSubmit","onClick onContextMenu onDoubleClick"],answer:0},{text:"Какие из указанных событий являтся событиями мыши?",variants:["onKeyDown onKeyPress onKeyUp","onChange onInput onInvalid onReset onSubmit","onClick onContextMenu onDoubleClick"],answer:2},{text:"Какие из указанных событий являтся событиями форм?",variants:["onKeyDown onKeyPress onKeyUp","onChange onInput onInvalid onReset onSubmit","onClick onContextMenu onDoubleClick"],answer:1},{text:"Какой из указанных хуков позволяет мемоизировать колбек?",variants:["useCallback","useMemo","UseEffect"],answer:0},{text:"Какой из указанных хуков позволяет мемоизировать сложное вычисление?",variants:["useCallback","useMemo","useComputed"],answer:2},{text:"Какой из указанных хуков позволяет создать референс на компоненту?",variants:["useCallback","useRef","useComputed"],answer:1},{text:"Какой из указанных хуков позволяет подписаться на изменения в компоненте до ее отрисовки?",variants:["useLayoutEffect","useRef","useComputed"],answer:0},{text:"Что такое CircuitBraker",variants:["Специальная компонента для отлова ошибок и рендера загрулек","Электронная схема для разрыва электронной цепи","Рок группа"],answer:0}];t.default=function(t){t.data;var n,c,u=t.location,l=Object(a.useState)(i.map((function(e){return 0}))),m=l[0],v=l[1],w=Object(a.useState)(!1),p=w[0],x=w[1];return e.createElement(r.a,{location:u},p?e.createElement(o.a,null,e.createElement("h2",{css:{marginTop:10,marginBottom:15}},"Вы правильно ответили на ",i.filter((function(e,t){return m[t]===e.answer})).length," из ",i.length," вопросов"),e.createElement("h2",null,"Ваша оценка: ",(c=i.filter((function(e,t){return m[t]===e.answer})).length)<=10?"Неудовлетворительно":c<=14?"Удовлетворительно":c<=18?"Хорошо":"Отлично"," ")):e.createElement(o.a,null,e.createElement("h2",{css:{marginTop:10,marginBottom:15}},"Данный тест призван проверить ваши теоретические знания материала"),i.map((function(t,n){var a=t.text,r=t.variants;return e.createElement("div",{css:{marginBottom:10}},e.createElement("h3",{css:{marginBottom:5}},n+1,". ",a),r.map((function(t,a){return e.createElement("div",{css:{display:"flex",flexDirection:"row"}},e.createElement("input",{type:"radio",name:n,value:a,checked:a===m[n],onChange:function(){return v((function(e){return[].concat(e.slice(0,n),[a],e.slice(n+1))}))},css:{marginRight:5},id:n+"-"+a}),e.createElement("label",{for:n+"-"+a},t))})))})),e.createElement("button",{css:(n={backgroundColor:s.a.brand,color:s.a.black,padding:"10px 25px",whiteSpace:"nowrap",transition:"background-color 0.2s ease-out",border:0,marginBottom:30},n[s.c.greaterThan("xlarge")]={paddingTop:15,paddingBottom:15},n[":hover"]={backgroundColor:s.a.white},n),onClick:function(){return x(!0)}},"Проверить")))}}.call(this,n("iMUK"))}}]);
//# sourceMappingURL=component---src-pages-test-test-html-js-a69e65ec8fba51b4f0d4.js.map