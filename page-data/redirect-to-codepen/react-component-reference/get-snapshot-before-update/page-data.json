{"componentChunkName":"component---src-templates-codepen-example-js","path":"/redirect-to-codepen/react-component-reference/get-snapshot-before-update","result":{"pageContext":{"action":"https://codepen.io/pen/define","payload":"{\"editors\":\"0010\",\"html\":\"<div id=\\\"root\\\"></div>\",\"js\":\"class ScrollingList extends React.Component {\\n  constructor(props) {\\n    super(props);\\n    this.listRef = React.createRef();\\n  }\\n\\n  getSnapshotBeforeUpdate(prevProps, prevState) {\\n    // Добавляются ли в список новые элементы?\\n    // Запоминаем значение прокрутки, чтобы использовать его позже.\\n    if (prevProps.list.length < this.props.list.length) {\\n      const list = this.listRef.current;\\n      return list.scrollHeight - list.scrollTop;\\n    }\\n    return null;\\n  }\\n\\n  componentDidUpdate(prevProps, prevState, snapshot) {\\n    // Если снимок (snapshot) передан, значит элементы добавлены.\\n    // Выравниваем прокрутку так, чтобы новые элементы не выталкивали старые.\\n    // (снимок – значение, переданное из getSnapshotBeforeUpdate)\\n    if (snapshot !== null) {\\n      const list = this.listRef.current;\\n      list.scrollTop = list.scrollHeight - snapshot;\\n    }\\n  }\\n\\n  render() {\\n    return (\\n      <div ref={this.listRef}>{/* ...contents... */}</div>\\n    );\\n  }\\n}\\n\",\"js_external\":\"//unpkg.com/react/umd/react.development.js;//unpkg.com/react-dom/umd/react-dom.development.js\",\"js_pre_processor\":\"babel\",\"layout\":\"left\"}"}},"staticQueryHashes":[]}