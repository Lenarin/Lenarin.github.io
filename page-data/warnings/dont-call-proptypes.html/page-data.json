{"componentChunkName":"component---src-templates-docs-js","path":"/warnings/dont-call-proptypes.html","result":{"data":{"markdownRemark":{"html":"<blockquote>\n<p>Примечание:</p>\n<p>С версии React 15.5 <code class=\"gatsby-code-text\">React.PropTypes</code> были вынесены в отдельный пакет. Вместо них используйте <a href=\"https://www.npmjs.com/package/prop-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">библиотеку <code class=\"gatsby-code-text\">prop-types</code></a>.</p>\n<p>Вы можете использовать <a href=\"/blog/2017/04/07/react-v15.5.0.html#migrating-from-reactproptypes\">codemod-скрипт</a>, автоматизировать переход на использование этой библиотеки.</p>\n</blockquote>\n<p>В следующем мажорном релизе React, если код использует функции валидации PropType, он будет удалён в продакшене. Как только это случится, любой код, который вызывает эти функции вручную (если он не был удалён в продакшене), будет выдавать ошибку.</p>\n<h3 id=\"declaring-proptypes-is-still-fine\"><a href=\"#declaring-proptypes-is-still-fine\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Объявления PropTypes всё ещё работают </h3>\n<p>Обычное использование PropTypes по-прежнему поддерживается:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">Button<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">highlighted</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>bool\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>В этом плане ничего не изменилось.</p>\n<h3 id=\"dont-call-proptypes-directly\"><a href=\"#dont-call-proptypes-directly\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Не вызывайте PropTypes напрямую </h3>\n<p>Использование PropTypes вне React-компонентов больше не поддерживается:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">var</span> apiShape <span class=\"token operator\">=</span> PropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">shape</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">body</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>object<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">statusCode</span><span class=\"token operator\">:</span> PropTypes<span class=\"token punctuation\">.</span>number<span class=\"token punctuation\">.</span>isRequired\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>isRequired<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Не поддерживается!</span>\n<span class=\"token keyword\">var</span> error <span class=\"token operator\">=</span> <span class=\"token function\">apiShape</span><span class=\"token punctuation\">(</span>json<span class=\"token punctuation\">,</span> <span class=\"token string\">'response'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Если вы полагаетесь на использование PropTypes, как в показанном выше примере, мы рекомендуем использовать или создать форк PropTypes (по аналогии <a href=\"https://github.com/aackerman/PropTypes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">этим</a> <a href=\"https://github.com/developit/proptypes\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">двум</a> пакетам).</p>\n<p>Если вы не исправите это предупреждение, подобный код нарушит работу приложения при использовании React 16.</p>\n<h3 id=\"if-you-dont-call-proptypes-directly-but-still-get-the-warning\"><a href=\"#if-you-dont-call-proptypes-directly-but-still-get-the-warning\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Если вы не вызываете PropTypes напрямую, но по-прежнему получаете предупреждение </h3>\n<p>Посмотрите на стек вызовов, созданный предупреждением. Вы найдёте определение компонента, ответственного за непосредственный вызов PropTypes. Скорее всего, проблема из-за сторонних пакетов, которые используют PropTypes из React, например таким образом:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\">Button<span class=\"token punctuation\">.</span>propTypes <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">highlighted</span><span class=\"token operator\">:</span> ThirdPartyPropTypes<span class=\"token punctuation\">.</span><span class=\"token function\">deprecated</span><span class=\"token punctuation\">(</span>\n    PropTypes<span class=\"token punctuation\">.</span>bool<span class=\"token punctuation\">,</span>\n    <span class=\"token string\">'Вместо текущего пропа используйте `active`'</span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>В данном случае <code class=\"gatsby-code-text\">ThirdPartyPropTypes.deprecated</code> — это обёртка, вызывающая <code class=\"gatsby-code-text\">PropTypes.bool</code>. В таком паттерне нет ничего плохого, но он приводит к ошибочному появлению предупреждения, поскольку React считает, что PropTypes вызываются напрямую. В следующем разделе показано, как решить такую проблему с библиотекой вроде <code class=\"gatsby-code-text\">ThirdPartyPropTypes</code>. Если это не ваша библиотека, вы можете создать ишью, чтобы её автор решил проблему с предупреждением.</p>\n<h3 id=\"fixing-the-false-positive-in-third-party-proptypes\"><a href=\"#fixing-the-false-positive-in-third-party-proptypes\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Исправление ошибочного срабатывания в сторонних PropTypes </h3>\n<p>Если вы автор сторонней библиотеки PropTypes и предоставляете пользователям обёртку над встроенными в React PropTypes, они могут увидеть это предупреждение. Это происходит из-за того, что React не видит последний «секретный» аргумент, который <a href=\"https://github.com/facebook/react/pull/7132\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">передаётся</a>, чтобы определять вызовы PropTypes вручную.</p>\n<p>Вот как исправляется это предупреждение. В качестве примера будем использовать <code class=\"gatsby-code-text\">deprecated</code> из библиотеки <a href=\"https://github.com/react-bootstrap/react-prop-types/blob/0d1cd3a49a93e513325e3258b28a82ce7d38e690/src/deprecated.js\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-bootstrap/react-prop-types</a>. Текущая реализация передаёт только аргументы <code class=\"gatsby-code-text\">props</code>, <code class=\"gatsby-code-text\">propName</code> и <code class=\"gatsby-code-text\">componentName</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">deprecated</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propType<span class=\"token punctuation\">,</span> explanation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\"Проп </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>propName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" компонента \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>componentName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" объявлен устаревшим.\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>explanation<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>warned<span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">warning</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        warned<span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">propType</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Для исправления ошибочного появления предупреждения, убедитесь, что вы передаёте <strong>все</strong> аргументы в обёрнутый PropType. Это легко сделать с помощью ES6-синтаксиса <code class=\"gatsby-code-text\">...rest</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"gatsby-code-jsx\"><code class=\"gatsby-code-jsx\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">deprecated</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">propType<span class=\"token punctuation\">,</span> explanation</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">function</span> <span class=\"token function\">validate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// Обратите на ...rest вот тут</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">[</span>propName<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> message <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\"Проп </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>propName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" компонента \"</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>componentName<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">\" объявлен устаревшим.\\n</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>explanation<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>warned<span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">warning</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        warned<span class=\"token punctuation\">[</span>message<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token function\">propType</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">,</span> propName<span class=\"token punctuation\">,</span> componentName<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>rest<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// и вот здесь</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>После этого предупреждение больше не будет появляться.</p>","frontmatter":{"title":"Предупреждение: не вызывайте PropTypes","next":null,"prev":null},"fields":{"path":"content\\warnings\\dont-call-proptypes.md","slug":"warnings/dont-call-proptypes.html"}}},"pageContext":{"slug":"warnings/dont-call-proptypes.html"}},"staticQueryHashes":[]}